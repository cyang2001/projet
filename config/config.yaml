# Main configuration file for Paris Metro Line Detection System

# Default values (can be overridden by command line arguments)
defaults:
  - mode: train  # Default mode is training
  - dataset: default  # Default dataset configuration
  - roi_detection: multi_color  # Default ROI detection configuration
  - classification: default  # Default classification configuration
  - preprocessing: default  # Default preprocessing configuration
  - _self_  # Include this configuration last

# General settings
output_dir: ${base_dir}/results  # Directory to save outputs
seed: 42  # Random seed for reproducibility
debug: false  # Enable debug mode
verbose: true  # Enable verbose logging

# Model dispatch for different modes
model_dispatch:
  train: "src.pipeline.train_pipeline:main"
  test: "src.pipeline.test_pipeline:main"
  demo: "src.pipeline.demo_pipeline:main"

# Paths common to all modes
data_root: dataset  # Base path to dataset

# Runtime configuration
device: cpu  # 'cpu' or 'cuda'

# Hydra configuration
hydra:
  run:
    dir: outputs/${now:%Y-%m-%d_%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d_%H-%M-%S}
    subdir: ${hydra.job.num}
  job:
    chdir: true

# Logging configuration
logging:
  level: INFO
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

data:
  data_root: BD_METRO
  train_mat: Apprentissage.mat
  test_mat: Test.mat
  val_split: 0.2

# ROI Dataset configuration (for CNN training)
roi_dataset:
  roi_dataset_dir: ${base_dir}/data/
  add_background_samples: true
  background_class_id: -1
  num_bg_samples_per_image: 2
  random_seed: ${seed}
  train_dir: ${base_dir}/data/train
  val_dir: ${base_dir}/data/val

common:
  template_dir: templates
  model_path: models/cnn_model.h5
  evaluate: false

visualization:
  enabled: true
  show_images: false
  save_plots: true
  plot_dir: "${base_dir}/results/plots"

base_dir: ${oc.env:BASE_DIR}

# ROI Detection configuration 
roi_detection:
  detector_type: multi_color_detector
  save_params: true
  params_dir: ${base_dir}/models